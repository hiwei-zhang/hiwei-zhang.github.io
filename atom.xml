<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hiwei-zhang.github.io</id>
    <title>hiwei`s blog</title>
    <updated>2021-03-24T13:57:52.439Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hiwei-zhang.github.io"/>
    <link rel="self" href="https://hiwei-zhang.github.io/atom.xml"/>
    <subtitle>不积硅步，无以至千里</subtitle>
    <logo>https://hiwei-zhang.github.io/images/avatar.png</logo>
    <icon>https://hiwei-zhang.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, hiwei`s blog</rights>
    <entry>
        <title type="html"><![CDATA[servlet解析]]></title>
        <id>https://hiwei-zhang.github.io/post/servlet-jie-xi/</id>
        <link href="https://hiwei-zhang.github.io/post/servlet-jie-xi/">
        </link>
        <updated>2017-01-06T13:54:37.000Z</updated>
        <content type="html"><![CDATA[<h4 id="servlet特征">servlet特征</h4>
<ol>
<li>servlet是单例多线程的。</li>
<li>一个servlet实例只会执行一次无参构造器与init()方法，并且是在第一次访问时执行。</li>
<li>用户每提交一次对当前servlet的请求，就会执行一次service()方法。</li>
<li>一个servlet实例只会执行一次destroy()方法，在应用停止时执行。</li>
<li>由于servlet是单例多线程的，所以为了保证其线程安全性，一般情况下是不为servlet类定义可修改的成员变量的。因为每个线程均可修改这个成员变量，会出现线程安全问题。</li>
<li>默认情况下，servlet在web容器启动时是不会被实例化的。</li>
</ol>
<h4 id="由genericservlet看java的多态">由GenericServlet看java的多态</h4>
<p>  java程序的运行分为编译器和运行期。运行期的类型绑定称之为动态绑定。<br>
  在GenericServlet中实现了init(ServletConfig config)方法：</p>
<pre><code>@Override
public void init(ServletConfig config) throws ServletException {    
    this.config = config;    
    this.init();
}
</code></pre>
<p>但是GenericServlet的子类也可能需要实现init(ServletConfig config)方法，在子类实现该方法的时候如果未调用super.init(config)方法，则会导致ServletConfig初始化失败。<br>
所以GenericServlet添加了重载方法init()交给子类实现。</p>
<pre><code>public void init() throws ServletException {   
    // NOOP by default
   }
</code></pre>
<p>子类只需要实现init()方法，只需要关注自身业务实现即可。实现了代码的解耦。这里所用到的就是java的多态。</p>
]]></content>
    </entry>
</feed>